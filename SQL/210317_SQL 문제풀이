-- BASIC SELECT
-- 1
SELECT
      DEPARTMENT_NAME AS "학과 명"
    , CATEGORY AS 계열
  FROM TB_DEPARTMENT;
 
-- 2  
SELECT
      DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.' AS "학과별 정원"
  FROM TB_DEPARTMENT;

-- 4
SELECT
       STUDENT_NAME
  FROM TB_STUDENT
 WHERE STUDENT_NO = 'A513079'
    OR STUDENT_NO = 'A513090'
    OR STUDENT_NO = 'A513091'
    OR STUDENT_NO = 'A513110'
    OR STUDENT_NO = 'A513119';
  
-- 5
SELECT 
       DEPARTMENT_NAME
     , CATEGORY
  FROM TB_DEPARTMENT
 WHERE CAPACITY BETWEEN 20 and 30;

-- 6
SELECT
       PROFESSOR_NAME
  FROM TB_PROFESSOR
 WHERE DEPARTMENT_NO IS NULL;
 
-- 7
SELECT
       STUDENT_NAME
  FROM TB_STUDENT
 WHERE DEPARTMENT_NO IS NULL;
 
-- 8
SELECT
      CLASS_NO
  FROM TB_CLASS
 WHERE PREATTENDING_CLASS_NO IS NOT NULL;
 
-- 9
SELECT DISTINCT
      CATEGORY
  FROM TB_DEPARTMENT;

-- 10
SELECT
       STUDENT_NO
     , STUDENT_NAME
     , STUDENT_SSN
  FROM TB_STUDENT
 WHERE SUBSTR(STUDENT_ADDRESS,1,3) = '전주시'; 

-- SELECT
-- 1
SELECT
       STUDENT_NO 학번
     , STUDENT_NAME 이름
     , TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') 입학년도
   FROM TB_STUDENT
  WHERE DEPARTMENT_NO = '002'
  ORDER BY 3;

-- 2
SELECT
       PROFESSOR_NAME
     , PROFESSOR_SSN
  FROM TB_PROFESSOR
 WHERE LENGTH(PROFESSOR_NAME) != 3;  

-- 3
SELECT
       PROFESSOR_NAME 교수이름
     , SUBSTR(TO_CHAR(SYSDATE,'RRMMDD'),1,2 - SUBSTR(TO_CHAR(SUBSTR(PROFESSOR_SSN,1,6),'RRMMDD'),1,2 + 100
  FROM TB_PROFESSOR
 ORDER BY 2;

-- 4
SELECT
      SUBSTR(PROFESSOR_NAME,2) 이름
  FROM TB_PROFESSOR;

-- 5
SELECT
      STUDENT_NO
    , STUDENT_NAME
  FROM TB_STUDENT
 WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD')) + 100 >= 21;

-- 6
SELECT
      TO_CHAR( TO_DATE('2020125','YYYYMMDD'),'DAY') 
  FROM DUAL;

-- 7
SELECT
      TO_CHAR(TO_DATE('99/10/11','YY/MM/DD'), 'YYYY"년"MM"월"DD"일"')
    , TO_CHAR(TO_DATE('49/10/11','YY/MM/DD'), 'YYYY"년"MM"월"DD"일"')
    , TO_CHAR(TO_DATE('99/10/11','RR/MM/DD'), 'RRRR"년"MM"월"DD"일"')
    , TO_CHAR(TO_DATE('49/10/11','RR/MM/DD'), 'RRRR"년"MM"월"DD"일"')
  FROM DUAL;

-- 8
SELECT
       STUDENT_NO
     , STUDENT_NAME
  FROM TB_STUDENT
 WHERE STUDENT_NO NOT LIKE 'A%';

-- 9
SELECT
       ROUND(AVG(POINT),1) 평점
  FROM TB_GRADE
 WHERE STUDENT_NO = 'A517178';

-- 11
SELECT
      COUNT(STUDENT_NO)
  FROM TB_STUDENT
 WHERE COACH_PROFESSOR_NO IS NULL;
 
 
-- ADDTIONAL SELECT - OPTION
-- 1
SELECT
       STUDENT_NAME 학생이름
     , STUDENT_ADDRESS 주소지
  FROM TB_STUDENT
 ORDER BY 1;

-- 2
SELECT
      STUDENT_NAME
    , STUDENT_SSN
  FROM TB_STUDENT
 WHERE ABSENCE_YN = 'Y'
 ORDER BY 2 DESC;

-- 3
SELECT
      STUDENT_NAME 학생이름
    , STUDENT_NO 학번
    , STUDENT_ADDRESS AS "거주지 주소"
  FROM TB_STUDENT
 WHERE (SUBSTR(STUDENT_ADDRESS,1,3) = '경기도'
    OR SUBSTR(STUDENT_ADDRESS,1,2) = '강원')
   AND STUDENT_NO LIKE '9%'
 ORDER BY 1;
 
-- 4
SELECT
       DEPARTMENT_NO
  FROM TB_DEPARTMENT
 WHERE DEPARTMENT_NO = '005';

SELECT
       PROFESSOR_NAME
     , PROFESSOR_SSN
  FROM TB_PROFESSOR
 WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                          FROM TB_DEPARTMENT
                         WHERE DEPARTMENT_NO = '005')
 ORDER BY 2;

-- 5
SELECT
       STUDENT_NO
     , POINT
  FROM TB_GRADE
 WHERE CLASS_NO = 'C3118100'
   AND TERM_NO = '200402'
 ORDER BY 2 DESC;
 
-- 6
SELECT
       STUDENT_NO
     , STUDENT_NAME
     , DEPARTMENT_NAME
  FROM TB_STUDENT
  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 ORDER BY 2;

-- 7
SELECT
       CLASS_NAME
     , DEPARTMENT_NAME
  FROM TB_CLASS C
  JOIN TB_DEPARTMENT D
 USING (DEPARTMENT_NO);

-- 8
SELECT
       CLASS_NAME
     , PROFESSOR_NAME
  FROM TB_CLASS 
  JOIN TB_CLASS_PROFESSOR 
 USING (CLASS_NO)
  JOIN TB_PROFESSOR 
 USING (PROFESSOR_NO);

-- 9
SELECT
       CLASS_NAME
     , PROFESSOR_NAME
  FROM TB_CLASS TC
  JOIN TB_CLASS_PROFESSOR TCP ON(TC.CLASS_NO = TCP.CLASS_NO) 
-- USING (CLASS_NO)
  JOIN TB_PROFESSOR TP ON(TCP.PROFESSOR_NO = TP.PROFESSOR_NO) 
-- USING (PROFESSOR_NO)
  JOIN TB_DEPARTMENT 
 USING (DEPARTMENT_NO)
 WHERE CATEGORY = '인문사회';


SELECT
       CLASS_NAME
     , PROFESSOR_NAME
  FROM TB_CLASS C,TB_CLASS_PROFESSOR CP, TB_PROFESSOR P, TB_DEPARTMENT D
 WHERE C.CLASS_NO = CP.CLASS_NO
   AND CP.PROFESSOR_NO = P.PROFESSOR_NO
   AND C.DEPARTMENT_NO = D.DEPARTMENT_NO
   AND D.CATEGORY = '인문사회'
 ORDER BY C.DEPARTMENT_NO, C.CLASS_NO, P.PROFESSOR_NO;
   
-- 10
--10. ‘음악학과’ 학생들의 평점을 구하려고 핚다. 음악학과 학생들의 "학번", 
--"학생 이름", "젂체 평점"을 출력하는 SQL 문장을 작성하시오.
--(단, 평점은 소수점 1자리까지맊 반올림하여 표시핚다.)

SELECT 
       TG.STUDENT_NO 학번
     , TS.STUDENT_NAME AS "학생 이름"
     , ROUND(AVG(POINT),1) "전체 평점"
  FROM TB_STUDENT TS
  JOIN TB_GRADE TG ON(TS.STUDENT_NO = TG.STUDENT_NO)
  JOIN TB_DEPARTMENT TD ON(TS.DEPARTMENT_NO = TD.DEPARTMENT_NO)
 WHERE TD.DEPARTMENT_NAME = '음악학과'
 GROUP BY TG.STUDENT_NO, TS.STUDENT_NAME
 ORDER BY 1;
  
SELECT 
       TG.STUDENT_NO
     , AVG(POINT)
  FROM TB_GRADE TG
 GROUP BY STUDENT_NO; 

-- 11
--학번이 A313047인 학생이 학교에 나오고 있지 않다. 
--지도 교수에게 내용을 젂달하기 위핚 학과 이름, 
--학생 이름과 지도 교수 이름이 필요하다. 이때 사용핛 SQL 문을 작성하시오. 
--단, 출력헤더는 ‚학과이름‛, ‚학생이름‛, ‚지도교수이름‛으로 출력되도록 한다.
SELECT
       DEPARTMENT_NAME 학과이름
     , STUDENT_NAME 학생이름
     , PROFESSOR_NAME 지도교수이름
  FROM TB_STUDENT
  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
  JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
 WHERE STUDENT_NO = 'A313047';
  
-- 12
--2007년도에 '인갂관계롞' 과목을 수강핚 학생을 찾아 
--학생이름과 수강학기름 표시하는 SQL 문장을 작성하시오.
SELECT
       TS.STUDENT_NAME
     , TG.TERM_NO
  FROM TB_STUDENT TS
  JOIN TB_GRADE TG ON(TS.STUDENT_NO = TG.STUDENT_NO)
  JOIN TB_CLASS TC ON(TG.CLASS_NO = TC.CLASS_NO)
 WHERE TERM_NO LIKE '2007%'
   AND CLASS_NAME = '인간관계론';
 
-- 13
--예체능 계열 과목 중 과목 담당교수를 
--핚 명도 배정받지 못핚 과목을 찾아 
--그 과목 이름과 학과 이름을 출력하는 SQL 문장을 작성하시오.
SELECT
       TC.CLASS_NAME
     , TC.CLASS_NO 
     , TD.DEPARTMENT_NAME
  FROM TB_CLASS TC
  JOIN TB_DEPARTMENT TD USING(DEPARTMENT_NO)
 WHERE CATEGORY = '예체능';

-- 14
--춘 기술대학교 서반아어학과 학생들의 지도교수를 게시하고자 핚다.
--학생이름과 지도교수 이름을 찾고 만일 지도 교수가 없는 학생일 경우
--"지도교수 미지정‛으로 표시하도록 하는 SQL 문을 작성하시오.
--단, 출력헤더는 ‚학생이름‛, ‚지도교수‛로 표시하며 고학번 학생이
--먼저 표시되도록 한다.
SELECT
       TS.STUDENT_NAME
     , NVL(TP.PROFESSOR_NAME, '지도교수 미지정')
  FROM TB_STUDENT TS
  JOIN TB_PROFESSOR TP ON(TS.COACH_PROFESSOR_NO = TP.PROFESSOR_NO)
  JOIN TB_DEPARTMENT TD ON(TS.DEPARTMENT_NO = TD.DEPARTMENT_NO)
 WHERE TD.DEPARTMENT_NAME = '서반아어학과';





